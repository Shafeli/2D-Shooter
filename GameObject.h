#pragma once
#include <vector>
#include <SFML/Graphics/Sprite.hpp>

#include "Definition.h"
#include "GameManager.h"

class IControls;

class GameObject
{
    GameDataRef m_data;
    sf::Sprite m_sprite;
    sf::Clock m_rateOfFire;
    sf::Sound m_sound;

    std::shared_ptr<IControls> m_pControlType;

    //////////////////////////////////////////////
    // TODO: Rework this projectile requrement
    //////////////////////////////////////////////
    float m_direction;

public:
    ///////////////////////////////////////////
    // different C'tor overloads for Different Object Types
    // Player = just Game Data
    // Projectile = Game Data,const sf::Vector2f& Position
    // AI = Game Data, size_t
    ///////////////////////////////////////////
    
    ///////////////////////////////////////////
    // Create Player
    ///////////////////////////////////////////
    GameObject(GameDataRef data);
    ///////////////////////////////////////////
    // Create AI
    ///////////////////////////////////////////
    GameObject(GameDataRef data, size_t targetNum);
    ///////////////////////////////////////////
    // Create Projectile 
    ///////////////////////////////////////////
    GameObject(GameDataRef data, const sf::Vector2f& pos, float Direction);

    ///////////////////////////////////////////
    // pControl -> Exicute
    ///////////////////////////////////////////
    void Update(float dt);

    ///////////////////////////////////////////
    // Draws Sprite to Window 
    ///////////////////////////////////////////
    void Draw();

    ///////////////////////////////////////////
    // m_sound -> Play
    ///////////////////////////////////////////
    void MakeSound();

    ///////////////////////////////////////////
    // returns if pControl has used action button
    ///////////////////////////////////////////
    bool OnUse();


    ///////////////////////////////////////////
    // Current Hit dectection 
    ///////////////////////////////////////////
    const sf::Vector2f& GetPOS();
    const sf::Sprite& GetSprite();
};
